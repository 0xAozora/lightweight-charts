"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[62],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=i.createContext({}),s=function(e){var n=i.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return i.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(t),m=r,k=d["".concat(p,".").concat(m)]||d[m]||u[m]||a;return t?i.createElement(k,l(l({ref:n},c),{},{components:t})):i.createElement(k,l({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=d;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<a;s++)l[s]=t[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6476:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return c},default:function(){return d}});var i=t(7462),r=t(3366),a=(t(7294),t(3905)),l=["components"],o={id:"SeriesOptionsCommon",title:"Interface: SeriesOptionsCommon",sidebar_label:"SeriesOptionsCommon",sidebar_position:0,custom_edit_url:null},p=void 0,s={unversionedId:"api/interfaces/SeriesOptionsCommon",id:"api/interfaces/SeriesOptionsCommon",isDocsHomePage:!1,title:"Interface: SeriesOptionsCommon",description:"Represents options common for all types of series",source:"@site/docs/api/interfaces/SeriesOptionsCommon.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/SeriesOptionsCommon",permalink:"/lightweight-charts/api/interfaces/SeriesOptionsCommon",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"SeriesOptionsCommon",title:"Interface: SeriesOptionsCommon",sidebar_label:"SeriesOptionsCommon",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"SeriesMarker",permalink:"/lightweight-charts/api/interfaces/SeriesMarker"},next:{title:"SeriesOptionsMap",permalink:"/lightweight-charts/api/interfaces/SeriesOptionsMap"}},c=[{value:"Properties",id:"properties",children:[{value:"lastValueVisible",id:"lastvaluevisible",children:[],level:3},{value:"title",id:"title",children:[],level:3},{value:"priceScaleId",id:"pricescaleid",children:[],level:3},{value:"visible",id:"visible",children:[],level:3},{value:"priceLineVisible",id:"pricelinevisible",children:[],level:3},{value:"priceLineSource",id:"pricelinesource",children:[],level:3},{value:"priceLineWidth",id:"pricelinewidth",children:[],level:3},{value:"priceLineColor",id:"pricelinecolor",children:[],level:3},{value:"priceLineStyle",id:"pricelinestyle",children:[],level:3},{value:"priceFormat",id:"priceformat",children:[],level:3},{value:"baseLineVisible",id:"baselinevisible",children:[],level:3},{value:"baseLineColor",id:"baselinecolor",children:[],level:3},{value:"baseLineWidth",id:"baselinewidth",children:[],level:3},{value:"baseLineStyle",id:"baselinestyle",children:[],level:3},{value:"autoscaleInfoProvider",id:"autoscaleinfoprovider",children:[],level:3},{value:"scaleMargins",id:"scalemargins",children:[],level:3}],level:2}],u={toc:c};function d(e){var n=e.components,t=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Represents options common for all types of series"),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"lastvaluevisible"},"lastValueVisible"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"lastValueVisible"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"Visibility of the label with the latest visible price on the price scale."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," ",(0,a.kt)("inlineCode",{parentName:"p"},"true")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"title"},"title"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"title"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"You can name series when adding it to a chart. This name will be displayed on the label next to the last value label."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," ",(0,a.kt)("inlineCode",{parentName:"p"},"''")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"pricescaleid"},"priceScaleId"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"priceScaleId"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"Target price scale to bind new series to."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," ",(0,a.kt)("inlineCode",{parentName:"p"},"'right'")," if right scale is visible and ",(0,a.kt)("inlineCode",{parentName:"p"},"'left'")," otherwise"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"visible"},"visible"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"visible"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"Visibility of the series.\nIf the series is hidden, everything including price lines, baseline, price labels and markers, will also be hidden.\nPlease note that hiding a series is not equivalent to deleting it, since hiding does not affect the timeline at all, unlike deleting where the timeline can be changed (some points can be deleted)."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," ",(0,a.kt)("inlineCode",{parentName:"p"},"true")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"pricelinevisible"},"priceLineVisible"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"priceLineVisible"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"Show the price line. Price line is a horizontal line indicating the last price of the series."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," ",(0,a.kt)("inlineCode",{parentName:"p"},"true")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"pricelinesource"},"priceLineSource"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"priceLineSource"),": ",(0,a.kt)("a",{parentName:"p",href:"../enums/PriceLineSource"},(0,a.kt)("inlineCode",{parentName:"a"},"PriceLineSource"))),(0,a.kt)("p",null,"The source to use for the value of the price line."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," ",(0,a.kt)("a",{parentName:"p",href:"../enums/PriceLineSource#lastbar"},"PriceLineSource.LastBar")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"pricelinewidth"},"priceLineWidth"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"priceLineWidth"),": ",(0,a.kt)("a",{parentName:"p",href:"../#linewidth"},(0,a.kt)("inlineCode",{parentName:"a"},"LineWidth"))),(0,a.kt)("p",null,"Width of the price line."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," ",(0,a.kt)("inlineCode",{parentName:"p"},"1")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"pricelinecolor"},"priceLineColor"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"priceLineColor"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"Color of the price line.\nBy default, its color is set by the last bar color (or by line color on Line and Area charts)."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," ",(0,a.kt)("inlineCode",{parentName:"p"},"''")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"pricelinestyle"},"priceLineStyle"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"priceLineStyle"),": ",(0,a.kt)("a",{parentName:"p",href:"../enums/LineStyle"},(0,a.kt)("inlineCode",{parentName:"a"},"LineStyle"))),(0,a.kt)("p",null,"Price line style."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," ",(0,a.kt)("a",{parentName:"p",href:"../enums/LineStyle#dashed"},"LineStyle.Dashed")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"priceformat"},"priceFormat"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"priceFormat"),": ",(0,a.kt)("a",{parentName:"p",href:"../#priceformat"},(0,a.kt)("inlineCode",{parentName:"a"},"PriceFormat"))),(0,a.kt)("p",null,"Price format."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," ",(0,a.kt)("inlineCode",{parentName:"p"},"{ type: 'price', precision: 2, minMove: 0.01 }")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"baselinevisible"},"baseLineVisible"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"baseLineVisible"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"Visibility of base line. Suitable for percentage and ",(0,a.kt)("inlineCode",{parentName:"p"},"IndexedTo100")," scales."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," ",(0,a.kt)("inlineCode",{parentName:"p"},"true")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"baselinecolor"},"baseLineColor"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"baseLineColor"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"Color of the base line in ",(0,a.kt)("inlineCode",{parentName:"p"},"IndexedTo100")," mode."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," ",(0,a.kt)("inlineCode",{parentName:"p"},"'#B2B5BE'")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"baselinewidth"},"baseLineWidth"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"baseLineWidth"),": ",(0,a.kt)("a",{parentName:"p",href:"../#linewidth"},(0,a.kt)("inlineCode",{parentName:"a"},"LineWidth"))),(0,a.kt)("p",null,"Base line width. Suitable for percentage and ",(0,a.kt)("inlineCode",{parentName:"p"},"IndexedTo10")," scales."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," ",(0,a.kt)("inlineCode",{parentName:"p"},"1")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"baselinestyle"},"baseLineStyle"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"baseLineStyle"),": ",(0,a.kt)("a",{parentName:"p",href:"../enums/LineStyle"},(0,a.kt)("inlineCode",{parentName:"a"},"LineStyle"))),(0,a.kt)("p",null,"Base line style. Suitable for percentage and indexedTo100 scales."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," ",(0,a.kt)("a",{parentName:"p",href:"../enums/LineStyle#solid"},"LineStyle.Solid")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"autoscaleinfoprovider"},"autoscaleInfoProvider"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"autoscaleInfoProvider"),": ",(0,a.kt)("a",{parentName:"p",href:"../#autoscaleinfoprovider"},(0,a.kt)("inlineCode",{parentName:"a"},"AutoscaleInfoProvider"))),(0,a.kt)("p",null,"Override the default ",(0,a.kt)("a",{parentName:"p",href:"AutoscaleInfo"},"AutoscaleInfo")," provider.\nBy default, the chart scales data automatically based on visible data range.\nHowever, for some reasons one could require overriding this behavior."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," ",(0,a.kt)("inlineCode",{parentName:"p"},"undefined")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"example"))," Use price range from 0 to 100 regardless the current visible range"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const firstSeries = chart.addLineSeries({\n    autoscaleInfoProvider: () => ({\n        priceRange: {\n            minValue: 0,\n            maxValue: 100,\n        },\n    }),\n});\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"example"))," Adding a small pixel margins to the price range"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const firstSeries = chart.addLineSeries({\n    autoscaleInfoProvider: () => ({\n        priceRange: {\n            minValue: 0,\n            maxValue: 100,\n        },\n        margins: {\n            above: 10,\n            below: 10,\n        },\n    }),\n});\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"example"))," Using the default implementation to adjust the result"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const firstSeries = chart.addLineSeries({\n    autoscaleInfoProvider: original => {\n        const res = original();\n        if (res !== null) {\n            res.priceRange.minValue -= 10;\n            res.priceRange.maxValue += 10;\n        }\n        return res;\n    },\n});\n")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"scalemargins"},"scaleMargins"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"scaleMargins"),": ",(0,a.kt)("a",{parentName:"p",href:"PriceScaleMargins"},(0,a.kt)("inlineCode",{parentName:"a"},"PriceScaleMargins"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"deprecated"))," Use ",(0,a.kt)("a",{parentName:"p",href:"ISeriesApi#pricescale"},"ISeriesApi.priceScale")," method of the series to apply options instead."))}d.isMDXComponent=!0}}]);